#include "parser.h"
#include "network_utils.h"
#include <stdio.h>

void parse_resp(char *input);
void parse_integer(char **input);
void parse_string(char **input);
void parse_array(char **input);
void parse_bulk(char **input);
void parse_error(char **input);

int command_parser(char *buffer) {
  parse_resp(buffer);
  return 0;
};

void parse_resp(char *input) {
  switch (*input) {
  case RESP_STRING:
    parse_string(&input);
    break;
  case RESP_ERROR:
    parse_error(&input);
    break;
  case RESP_INT:
    parse_integer(&input);
    break;
  case RESP_BULK:
    parse_bulk(&input);
    break;
  case RESP_ARRAY:
    parse_array(&input);
    return;
  default:
    printf("Unknown RESP type: %s\n", input);
    return;
  }
  if (*input != 0) {
    parse_resp(input);
  }
}
void parse_string(char **input) {
  (*input)++; // Skip the '+' character
  const char *start = *input;
  while (**input != '\r')
    (*input)++;
  printf("Simple String: %.*s\n", (int)(*input - start), start);
  *input += 2; // Skip the "\r\n"
}

void parse_error(char **input) {
  (*input)++; // Skip the '-' character
  const char *start = *input;
  while (**input != '\r')
    (*input)++;
  printf("Error: %.*s\n", (int)(*input - start), start);
  *input += 2; // Skip the "\r\n"
}

void parse_integer(char **input) {
  (*input)++; // Skip the ':' character
  int value = atoi(*input);
  printf("Integer: %d\n", value);
  while (**input != '\r')
    (*input)++;
  *input += 2; // Skip the "\r\n"
}

void parse_bulk(char **input) {
  (*input)++; // Skip the '$' character
  int length = atoi(*input);
  while (**input != '\r')
    (*input)++;
  *input += 2; // Skip the "\r\n"

  if (length == -1) {
    printf("Bulk String: null\n");
    return;
  }

  const char *start = *input;
  printf("Bulk String: %.*s\n", length, start);
  *input += length + 2; // Skip the bulk string and the trailing "\r\n"
}

void parse_array(char **input) {
  (*input)++; // Skip the '*' character
  int count = atoi(*input);
  while (**input != '\r')
    (*input)++;
  *input += 2; // Skip the "\r\n"
  printf("Array of %d elements:\n{ \n", count);
  parse_resp(*input);
  printf("}\n");
}

#ifdef TEST_PARSER
int main() {
  char input[] = "+OK\r\n:1000\r\n$6\r\nfoobar\r\n-Error "
                 "message\r\n*2\r\n$3\r\nfoo\r\n$3\r\nbar\r\n"
                 "+OK\r\n:1000\r\n$6\r\nfoobar\r\n";
  parse_resp(input);
  return 0;
}
#endif
